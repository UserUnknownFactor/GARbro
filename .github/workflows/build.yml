name: .NET Framework Build
on: [push, pull_request, workflow_dispatch]

env:
  PROGRAM_NAME: GARbro

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          fetch-depth: 0

      - name: Add MSbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet packages
        run: nuget restore

      - name: Build the solution
        run: msbuild /p:Configuration=Release /p:Platform="Any CPU" /p:TargetFrameworkVersion=v4.8 ${{ env.PROGRAM_NAME }}.sln

      - name: Set short SHA
        id: vars
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROGRAM_NAME }}-beta-${{ steps.vars.outputs.sha_short }}
          path: bin/Release

      - name: Create release zip
        if: startsWith(github.ref, 'refs/tags/') && contains(github.ref, '.')
        run: |
          $tag = "${{ github.ref_name }}"
          if ($tag -match '^\d+\.\d+\.\d+\.\d+$') {
            $releaseDir = "release-files"
            New-Item -ItemType Directory -Force -Path $releaseDir
            Get-ChildItem -Path "bin/Release" -Recurse | Where-Object {
              $_.Extension -ne '.pdb' -and !$_.PSIsContainer
            } | ForEach-Object {
              $relativePath = $_.FullName.Substring((Get-Item "bin/Release").FullName.Length + 1)
              $destPath = Join-Path $releaseDir $relativePath
              $destDir = Split-Path $destPath -Parent
              if (!(Test-Path $destDir)) {
                New-Item -ItemType Directory -Force -Path $destDir | Out-Null
              }
              Copy-Item $_.FullName -Destination $destPath
            }
            Compress-Archive -Path "$releaseDir/*" -DestinationPath "${{ env.PROGRAM_NAME }}-v$tag.zip"
            Remove-Item -Path $releaseDir -Recurse -Force
          }
        shell: pwsh

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/') && contains(github.ref, '.')
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.PROGRAM_NAME }} ${{ github.ref_name }}
          files: ${{ env.PROGRAM_NAME }}-v${{ github.ref_name }}.zip
          draft: false
          prerelease: false
          generate_release_notes: true